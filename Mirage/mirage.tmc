include "target.tmh"
include "util.ttm"
include "keyboard.ttm"


int main()
{
	Configure(&HCougar,MODE_EXCLUDED);
	Configure(&T16000,MODE_EXCLUDED);
	SetKBRate(50, 75);
    if(Init(&EventHandle)) return 1; // declare the event handler, return on error

	//Initialize Backlights
    	//ActKey(PULSE+KEYON+LED(&Throttle, LED_INTENSITY, ThrottleBL_OFF));

	//AXIS Assignment
	MapAxis(&Joystick, JOYX, DX_X_AXIS); 
	MapAxis(&Joystick, JOYY, DX_Y_AXIS);
	MapAxis(&Throttle, THR_LEFT, DX_ZROT_AXIS);
	MapAxis(&Throttle, THR_RIGHT, DX_Z_AXIS); 
	MapAxis(&Throttle, THR_FC, DX_SLIDER_AXIS);
	//MapAxis(&Throttle, SCY, DX_YROT_AXIS, AXIS_REVERSED, MAP_ABSOLUTE); 
	//SetSCurve(&Throttle, SCY, 0, 20, 0, 10, -4); 
	//MapAxis(&Throttle, SCX, DX_XROT_AXIS, AXIS_NORMAL, MAP_ABSOLUTE); 
	//SetSCurve(&Throttle, SCX, 0, 20, 0, 10, -4);
	KeyAxis(&Throttle, SCX, 0, AXMAP2(5, TDC_LEFT, 0, 0, 0, TDC_RIGHT)); 
	KeyAxis(&Throttle, SCY, 0, AXMAP2(5, TDC_UP, 0, 0, 0, TDC_DOWN)); 
//Layers&Modes
	SetShiftButton(&Joystick,S1);
	
//STICK

	//S2 Weapon Release
		MapKey(&Joystick, S2,PULSE + NAV_Update_MAGIC_unlock); //DX4

	//S1 Master Mode Control Button
		//MapKey(&Joystick, S1,0);
	//Trim
		MapKey(&Joystick,H1D, Trim_UP);
		MapKey(&Joystick,H1U,Trim_DOWN);
		MapKey(&Joystick,H1L,Trim_LEFT);
		MapKey(&Joystick,H1R,Trim_RIGHT);


	//TMS
		MapKey(&Joystick,H2D,PULSE + Magic_Slave_AG_Designate_INS_Position_Update);
		MapKey(&Joystick,H2U,PULSE+STTTWS_Toggle);
		MapKey(&Joystick,H2L,0);
		MapKey(&Joystick,H2R,0);

	//Trigger 
		//TG1
			MapKey(&Joystick,TG1,0); 
		//TG2
			MapKey(&Joystick,TG2,Weapons_FIREBomb_Release); //DX1
	
	//DMS
		MapKey(&Joystick,H3D,DX30);
		MapKey(&Joystick,H3U,PULSE + Decoy_Program_release);
		MapKey(&Joystick,H3L,0);
		MapKey(&Joystick,H3R,0);

	//CMS
		MapKey(&Joystick,H4D,Special_Modes_AFT); //DX2
		MapKey(&Joystick,H4U,Special_Modes_FWD); //DX3
		MapKeyIO(&Joystick,H4L,TEMPO(Kneeboard_Previous_Page,Kneeboard_Previous_Shortcut),0);
		MapKeyIO(&Joystick,H4R,TEMPO(Kneeboard_Next_Page,Kneeboard_Next_Shortcut),0);
		MapKeyIO(&Joystick,H4P,Kneeboard_Make_Shortcut,PULSE+Target_UnlockSpecial_Modes_Deselect); 
	
	//S3 Pinky Switch
		MapKey(&Joystick, S3,TEMPO(PULSE+Nosewheel_SteeringIFF_Interrogate,Autopilot_Standby_Mode));
	
	//S4 Paddle Switch
		MapKey(&Joystick, S4,Autopilot_DisconnectExceed_Elastic_Limit);
		
//THROTTLE

	//Pinky
		MapKey(&Throttle,PSF,Police_Lights_ON); //DX6
		//MapKey(&Throttle,PSM,);
		MapKey(&Throttle,PSB,Police_Lights_OFF); //DX5
		
	//Left Throttle Button
		MapKey(&Throttle,LTB,PULSE + Decoy_PANIC_release);
	
	//Slew
		MapKey(&Throttle,SC,PULSE+TDC_CENTER); 

	//Coolie
		MapKey(&Throttle,CSD,Radar_Antenna_DOWN); //DX10
		MapKey(&Throttle,CSU,Radar_Antenna_UP); //DX11
		MapKey(&Throttle,CSL,PULSE + Magic_Slave_AG_Designate_INS_Position_Update); //DX9
		MapKey(&Throttle,CSR,PULSE + Jammer_ACTIVATE_Standby_Toggle);
	
	//Mic Switch
		MapKey(&Throttle, MSD, PULSE+Communication_menu);
		MapKey(&Throttle, MSU,TsPTT); //VAC push to talk
		MapKey(&Throttle, MSL,CHAIN(PULSE + Aux_UHF_Radio_SELECT,D(),SRSRadio2));
		//MapKey(&Throttle, MSL,Aux_UHF_Radio_SELECT);
		MapKey(&Throttle, MSR,CHAIN(PULSE + Main_U_VHF_Radio_SELECT,D(),SRSRadio1));
		//MapKey(&Throttle, MSR,Main_U_VHF_Radio_SELECT);
		//MapKey(&Throttle, MSP,TsPTT);	// TeamSpeak

	//Speed Brake
		MapKey(&Throttle,SPDF,PULSE+Airbrake_OFF);
		MapKey(&Throttle,SPDM,PULSE+Airbrake_ON);
		//MapKey(&Throttle,SPDB,);
	
	//Boat
		MapKey(&Throttle,BSF,MAGIC_SELECT); //DX7
		MapKey(&Throttle,BSM,PCA_SELECT); //DX8
		MapKey(&Throttle,BSB,PULSE + AA_Gun_Select);
	
	//China Hat
		MapKeyIO(&Throttle,CHF,Seat_RAISE,Radar_Range_INCREASE);
		MapKeyIO(&Throttle,CHB,Seat_LOWER,Radar_Range_DECREASE);
	
	
//Throttle Panel

	//Engine Fuel Flow
		//Left
		//MapKey(&Throttle,EFLNORM,);
		//MapKey(&Throttle,EFLOVER,);
		
		//Right
		//MapKey(&Throttle,EFRNORM,);
		//MapKey(&Throttle,EFROVER,);
	
	//Engine Oper
		//Left
		//MapKey(&Throttle,EOLIGN,);
		//MapKey(&Throttle,EOLNORM,);
		//MapKey(&Throttle,EOLMOTOR,);
		
		//Right
		//MapKey(&Throttle,EORIGN,);
		//MapKey(&Throttle,EORNORM,);
		//MapKey(&Throttle,EORMOTOR,);
				
	//APU
		//MapKey(&Throttle,APUON,);
		//MapKey(&Throttle,APUOFF,);
	
	//Flaps
		//MapKey(&Throttle,FLAPU,);
		//MapKey(&Throttle,FLAPM,);
		//MapKey(&Throttle,FLAPD,);
	
	//Idle Cutoff
		//Left
		MapKey(&Throttle,IDLELON, PULSE + Engines_STOP);
		//MapKey(&Throttle,IDLELOFF,);
		
		//Right
		//MapKey(&Throttle,IDLERON,);
		//MapKey(&Throttle,IDLEROFF,);
	
	// Throttle Friction Control
	
	
	//Landing Gear Horn Silence
		MapKey(&Throttle,LDGH,PULSE + Landing_Gear_TOGGLE);
	//EAC
		//MapKey(&Throttle,EACON,);
		//MapKey(&Throttle,EACOFF,);
	//RDR Altm
		//MapKey(&Throttle,RDRNRM,);
		//MapKey(&Throttle,RDRDIS,);
	//AP Engage/Disengage
		MapKey(&Throttle,APENG,TEMPO(TrackIRPause,TrackIRCenter ));

	//AP Select Switch
		//MapKey(&Throttle,APPAT,);
		//MapKey(&Throttle,APAH,);
		//MapKey(&Throttle,APALT,);


}


int EventHandle(int type, alias o, int x)
{
    DefaultMapping(&o, x);
	
	//add event handling code here
}