include "target.tmh"
include "util.ttm"
include "keyboard.ttm"




int main()
{
	Configure(&HCougar,MODE_EXCLUDED);
	Configure(&T16000,MODE_EXCLUDED);
	SetKBRate(50, 75);
    if(Init(&EventHandle)) return 1; // declare the event handler, return on error

	//AXIS Assignment
	MapAxis(&Joystick, JOYX, DX_X_AXIS); 
	MapAxis(&Joystick, JOYY, DX_Y_AXIS); 
	MapAxis(&Throttle, THR_LEFT, DX_ZROT_AXIS);   
	MapAxis(&Throttle, THR_RIGHT, DX_Z_AXIS); 
	MapAxis(&Throttle, THR_FC, DX_SLIDER_AXIS);
	
	
//STICK
	
	//S2
	MapKey(&Joystick, S2,Weapon_Release);
	
	//S3
	MapKey(&Joystick, S3,DX_Nosewheel_Steering_Button);
	
	//S4
	MapKey(&Joystick, S4,TEMPO(PULSE+TrackIRPause,PULSE+TrackIRCenter));	//TrackIR
	
	//Trigger
	MapKey(&Joystick,TG2,Trigger__SECOND_DETENT_Gun_Fire); //second detent on trigger
	
	//Trim
	MapKey(&Joystick,H1D,Trim_Up);
	MapKey(&Joystick,H1U,Trim_Down);
	MapKey(&Joystick,H1L,Trim_Left);
	MapKey(&Joystick,H1R,Trim_Right);
	
	//DMS
	MapKey(&Joystick,H3D,VRZoomDX);
	//MapKey(&Joystick,H3U,);
	//MapKey(&Joystick,H3L,);
	//MapKey(&Joystick,H3R,);
	
	//TMS
	MapKey(&Joystick,H2D,Kneeboard_glance_view);
	MapKey(&Joystick,H2U,TEMPO(PULSE+Kneeboard_ON_OFF,PULSE+Kneeboard_current_position_mark_point));
	MapKey(&Joystick,H2L,Kneeboard_Previous_Page);
	MapKey(&Joystick,H2R,Kneeboard_Next_Page);
	
	//CMS
	MapKey(&Joystick,H4P,A_4_Sight_Radar_Target_Selector_Button); 
	
//THROTTLE

	//Speedbrake button
	MapKey(&Throttle,SPDF,DX_Speed_Brake_Switch__IN);
	MapKey(&Throttle,SPDM,DX_Speed_Brake_Switch__HOLD);
	MapKey(&Throttle,SPDB,DX_Speed_Brake_Switch__OUT);
	
	//Flaps
	MapKey(&Throttle,FLAPU,PULSE + Flaps_Up);
	MapKey(&Throttle,FLAPM,PULSE + Flaps_Stop);
	MapKey(&Throttle,FLAPD,PULSE + Flaps_Down);
	
	//LandingGear Horn Silence
	MapKey(&Throttle,LDGH,TEMPO(PULSE + Landing_Gear_Warning_Horn_Cutout_Button,PULSE + Landing_Gear_Up_Down ));
	
	//Throttle Idle Detent
	MapKey(&Throttle,IDLERON,PULSE+Throttle__Stop_Engine);
	MapKeyR(&Throttle,IDLERON,PULSE+Throttle__Start_Engine);

	//TDC
	MapKey(&Throttle,SC,A_4_Sight_Electrical_Caging_Button__On_Throttle); //TDC button
	
	//APU Switch
	//MapKey(&Throttle,APUON,PULSE+GearUp);
	//MapKey(&Throttle,APUOFF,PULSE+GearDown);
	
	//Mic Switch
	MapKey(&Throttle, MSP,0);	
	MapKey(&Throttle, MSU,TsPTT);
	MapKey(&Throttle,MSR,Microphone_Button);
	MapKey(&Throttle,MSD,SRSRadio2);
	MapKey(&Throttle,MSL,SRSRadio3);
	
	//China Hat
	MapKey(&Throttle,CHB,PULSE+Throttle__Start_Engine);
	MapKey(&Throttle,CHF,PULSE+Throttle__Start_Engine);

}


int EventHandle(int type, alias o, int x)
{
    DefaultMapping(&o, x);
	
	//add event handling code here
}