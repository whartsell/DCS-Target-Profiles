include "target.tmh"
include "util.ttm"
include "keys.ttm"

//program startup
int main()
{
	Configure(&HCougar,MODE_EXCLUDED);
	Configure(&T16000,MODE_EXCLUDED);
	Configure(&RMFD,MODE_EXCLUDED);
	SetKBRate(50, 75);
    if(Init(&EventHandle)) return 1; // declare the event handler, return on error
	
	int AutopilotExecute = SEQ(EXEC("ApMode();"),PULSE+ApDisc);
	MapKey(&Throttle,APENG,AutopilotExecute);
	//MapKey(&Throttle,LTB,AutopilotExecute);
	
	//AXIS Assignment
	MapAxis(&Joystick, JOYX, DX_X_AXIS); 
	MapAxis(&Joystick, JOYY, DX_Y_AXIS); 
	MapAxis(&Throttle, THR_LEFT, DX_ZROT_AXIS);   
	MapAxis(&Throttle, THR_RIGHT, DX_Z_AXIS); 
	MapAxis(&Throttle, THR_FC, DX_SLIDER_AXIS);
	
	MapAxis(&Throttle, SCY, DX_YROT_AXIS, AXIS_REVERSED, MAP_ABSOLUTE); 
	SetSCurve(&Throttle, SCY, 0, 20, 0, 10, -4); 
	MapAxis(&Throttle, SCX, DX_XROT_AXIS, AXIS_NORMAL, MAP_ABSOLUTE); 
	SetSCurve(&Throttle, SCX, 0, 20, 0, 10, -4);
	//KeyAxis(&Throttle, SCX, 0, AXMAP2(5, TDLeft, 0, 0, 0, TDRight)); 
	//KeyAxis(&Throttle, SCY, 0, AXMAP2(5, TDUp, 0, 0, 0, TDDown)); 
	
	//UTIL
	
	MapKey(&Joystick, S4,TEMPO(PULSE+TrackIRPause,PULSE+TrackIRCenter));	//TrackIR
	
	
	
	//Layers&Modes
	SetShiftButton(&Joystick,S3,&Throttle,BSF,BSB);
	MapKey(&Throttle,BSF,PULSE+BVRMode);
	MapKey(&Throttle,BSM,PULSE+NavModes);
	MapKey(&Throttle,BSB,PULSE+VertScanMode);
	
	//Systems
	
	//Trim
	MapKey(&Joystick,H1D,TrimUp);
	MapKey(&Joystick,H1U,TrimDown);
	MapKey(&Joystick,H1L,TrimLeft);
	MapKey(&Joystick,H1R,TrimRight);
	
	//AirBrake
	MapKey(&Throttle,SPDF,PULSE+AirbrakeOn);
	MapKey(&Throttle,SPDM,PULSE+AirbrakeOff);
	MapKey(&Throttle,SPDB,PULSE+AirbrakeOn);
	
	//Flaps
	MapKey(&Throttle,FLAPU,PULSE+FlapsUp);
	MapKey(&Throttle,FLAPM,PULSE+FlapsToggle);
	MapKey(&Throttle,FLAPD,PULSE+FlapsLanding);
	//Gear&Warning
	MapKey(&Throttle,LDGH,TEMPO(WarningReset,GearToggle));
	MapKey(&Joystick,S3,NWS);
	//Engines
	MapKey(&Throttle,IDLELON,PULSE+LEngStop);
	MapKey(&Throttle,IDLERON,PULSE+REngStop);
	MapKey(&Throttle,EOLIGN,LEngStart);
	MapKey(&Throttle,EORIGN,REngStart);
	//Refueling
	MapKey(&Throttle,APUON,PULSE+Electric_Power);
	MapKey(&Throttle,APUOFF,PULSE+Electric_Power);
	
	//Weapons
	MapKey(&Joystick,TG1,WeaponFire);
	MapKey(&Joystick,S1,PULSE+Cannon);
	MapKey(&Joystick,S2,WeaponRelease);
	//TMS
	//MapKeyUMD(&Joystick,H2U,TEMPO(PULSE+TgtLock,TWSToggle,500),TEMPO(PULSE + RadToggle,TWSToggle,500),PULSE+TgtLock);
	//MapKeyUMD(&Joystick,H2R,RadScanInc,0,0);
	//MapKeyUMD(&Joystick,H2D,PULSE+TgtUnlock,0,PULSE+TgtUnlock);
	//MapKeyUMD(&Joystick,H2L,RadScanDec,0,0);
	MapKey(&Joystick, H2U, TEMPO(PULSE + TgtLock, TWSToggle, 500));
	MapKey(&Joystick, H2R, RadScanInc);
	MapKey(&Joystick, H2D, TEMPO(PULSE + TgtUnlock, RadToggle, 500));
	MapKey(&Joystick, H2L, RadScanDec);
	
	//DMS
	//MapKeyUMD(&Joystick,H3U,TEMPO(PULSE+ZoomOut,PULSE+NextWpt,500),PULSE+NextWpt,TEMPO(PULSE+ZoomOut,PULSE+NextWpt,500)); 
	//MapKeyUMD(&Joystick,H3R,TEMPO(PULSE+BVRMode,PULSE + LongAimMode,500),0,TEMPO(PULSE+VertScanMode,PULSE+BoreMode,500)); 
	//MapKeyUMD(&Joystick,H3D,TEMPO(PULSE+ZoomIn,PULSE+NavModes,500),PULSE+NavModes,TEMPO(PULSE+ZoomIn,PULSE+NavModes,500));
	//MapKeyUMD(&Joystick,H3L,TEMPO(BVRMode,LongAimMode,500),0,TEMPO(PULSE+VertScanMode,PULSE+LongAimMode,500));
	MapKey(&Joystick, H3U, TEMPO(ZoomOut, NextWpt, 500)); 
	MapKey(&Joystick, H3R, TEMPO(PULSE + BVRMode, PULSE + LongAimMode, 500)); 
	MapKey(&Joystick, H3D, TEMPO(PULSE + ZoomIn, PULSE + NavModes, 500));
	MapKey(&Joystick, H3L, TEMPO(PULSE + VertScanMode,PULSE + BoreMode, 500));
	//CMS
	MapKey(&Joystick,H4P,CMECM);
	MapKey(&Joystick,H4U,PULSE+CMContDispense);
	MapKey(&Joystick,H4R,CMFlares);
	MapKey(&Joystick,H4D,CMRelease);
	MapKey(&Joystick,H4L,CMChaff);
	
	//Mic Switch
	MapKey(&Throttle, MSP,TsPTT);	// TeamSpeak
	MapKey(&Throttle, MSU,VACPTT);	//VAC PTT
	MapKey(&Throttle,MSR,PULSE+CommMenu);
	MapKey(&Throttle,MSD,0);
	MapKey(&Throttle,MSL,0);
	
	//Coolie Switch
	MapKey(&Throttle,CSU,ScanUp);
	MapKey(&Throttle,CSR,ScanRight);
	MapKey(&Throttle,CSD,ScanDown);
	MapKey(&Throttle,CSL,ScanLeft);
	
	//China Hat
	MapKey(&Throttle, CHB, TEMPO(PULSE + WeaponChange, PULSE + LaunchOverride, 1000));
	MapKey(&Throttle, CHF, PULSE + RadPRFSel);
	
	//Slew Control
	MapKey(&Throttle, SC, PULSE+TDCenter);
	
		// LeftMFD
	MapKey(&LMFD, CONU, PULSE + TWSToggle);
	MapKey(&LMFD, SYMU, PULSE + ZoomOut);
	MapKey(&LMFD, SYMD, PULSE + ZoomIn);
	MapKey(&LMFD, COND, PULSE + RadToggle);
	
	// RightMFD
	
	

}


//MapKeyUMD(&Joystick,H4U,0,0,0);
//event handler
int EventHandle(int type, alias o, int x)
{
    DefaultMapping(&o, x);
	
	//add event handling code here
}

int ApMode()
{
	if (Throttle[APALT]) ActKey(KEYON + PULSE + ApAltHold);
	//else if (Throttle[APALT] & Throttle[RDRDIS]) ActKey(PULSE+KEYON+ApBaroAlt);
	//else if (Throttle[APALT] & Throttle[RDRNRM]) ActKey(PULSE+KEYON+ApRadAlt);
	else ActKey(PULSE + KEYON + ApAttHold);
}