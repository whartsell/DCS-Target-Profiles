include "target.tmh"
include "util.ttm"
include "keyboard.ttm"


int main()
{
	Configure(&HCougar,MODE_EXCLUDED);
	Configure(&T16000,MODE_EXCLUDED);
	SetKBRate(50, 75);
    if(Init(&EventHandle)) return 1; // declare the event handler, return on error

	//Initialize Backlights
    	//ActKey(PULSE+KEYON+LED(&Throttle, LED_INTENSITY, ThrottleBL_OFF));

	//AXIS Assignment
	MapAxis(&Joystick, JOYX, DX_X_AXIS); 
	MapAxis(&Joystick, JOYY, DX_Y_AXIS);
	MapAxis(&Throttle, THR_LEFT, DX_ZROT_AXIS);
	MapAxis(&Throttle, THR_RIGHT, DX_Z_AXIS); 
	MapAxis(&Throttle, THR_FC, DX_SLIDER_AXIS);
	MapAxis(&Throttle, SCY, DX_YROT_AXIS, AXIS_REVERSED, MAP_ABSOLUTE); 
	SetSCurve(&Throttle, SCY, 0, 20, 0, 10, -4); 
	MapAxis(&Throttle, SCX, DX_XROT_AXIS, AXIS_NORMAL, MAP_ABSOLUTE); 
	SetSCurve(&Throttle, SCX, 0, 20, 0, 10, -4);

//Layers&Modes
	SetShiftButton(&Joystick,S3,&Throttle,BSF,BSB);
	
//STICK

	//S2 Weapon Release
		MapKey(&Joystick, S2,Launch_Permission_Override);

	//S1 Master Mode Control Button
		//MapKey(&Joystick, S1,PULSE+Cannon);
	//Trim
		MapKey(&Joystick,H1D,Trim_Nose_Up);
		MapKey(&Joystick,H1U,Trim_Nose_Down);
		MapKey(&Joystick,H1L,Trim_Left_Wing_Down);
		MapKey(&Joystick,H1R,Trim_Right_Wing_Down);


	//TMS
		MapKey(&Joystick,H2D,TEMPO(Return_To_Search,Electro_Optical_System_On_Off));
		MapKey(&Joystick,H2U,TEMPO(Target_Lock,Radar_On_Off));
		MapKey(&Joystick,H2L,Target_Specified_Size_Decrease);
		MapKey(&Joystick,H2R,Target_Specified_Size_Increase);

	//Trigger 
		//TG1
			//MapKey(&Joystick,TG1,);
		//TG2
			MapKey(&Joystick,TG2,Weapon_Fire);
	
	//DMS
		MapKey(&Joystick,H3U,TEMPO(_3_Close_Air_Combat_Vertical_Scan_Mode,_5_Close_Air_Combat_HMD_Helmet_Mode));
		MapKey(&Joystick,H3D,TEMPO(_4_Close_Air_Combat_Bore_Mode,_6_Longitudinal_Missile_Aiming_Mode));
		MapKey(&Joystick,H3L,_7_Air_To_Ground_Mode);
		MapKey(&Joystick,H3R,_2_Beyond_Visual_Range_Mode);

	//CMS
		MapKey(&Joystick,H4D,PULSE + Countermeasures_Continuously_Dispense);
		MapKey(&Joystick,H4U,PULSE + Countermeasures_Release);
		//MapKey(&Joystick,H4L,PULSE + Countermeasures_);
		MapKey(&Joystick,H4R,PULSE + Countermeasures_Flares_Dispense);
		MapKey(&Joystick,H4P,PULSE + ECM); 
	
	//S3 Pinky Switch
		//MapKey(&Joystick, S3,);
	
	//S4 Paddle Switch
		MapKey(&Joystick, S4,VRZoomDX);

//THROTTLE

	//Pinky
		//MapKey(&Throttle,PSF,);
		//MapKey(&Throttle,PSM,);
		//MapKey(&Throttle,PSB,);
		
	//Left Throttle Button
		//MapKey(&Throttle,LTB,);
	
	//Slew
		MapKey(&Throttle,SC,PULSE + Target_Designator_To_Center); 

	//Coolie
		MapKey(&Throttle,CSD,Scan_Zone_Down);
		MapKey(&Throttle,CSU,Scan_Zone_Up);
		MapKey(&Throttle,CSL,Scan_Zone_Left);
		MapKey(&Throttle,CSR,Scan_Zone_Right);
	
	//Mic Switch
		MapKey(&Throttle, MSD,SRSRadio2);
		MapKey(&Throttle, MSU,TsPTT);
		MapKey(&Throttle, MSL,SRSRadio3);
		MapKey(&Throttle, MSR,SRSRadio1);
		MapKey(&Throttle, MSP,PULSE + Communication_menu);

	//Speed Brake
		MapKey(&Throttle,SPDF,PULSE + Airbrake_On);
		MapKey(&Throttle,SPDM,PULSE + Airbrake_Off);
		MapKey(&Throttle,SPDB,PULSE + Airbrake_On);
	
	//Boat
		//MapKey(&Throttle,BSF,);
		//MapKey(&Throttle,BSM,);
		//MapKey(&Throttle,BSB,);
	
	//China Hat
		//MapKey(&Throttle,CHF,);
		//MapKey(&Throttle,CHB,);
	
	
//Throttle Panel

	//Engine Fuel Flow
		//Left
		//MapKey(&Throttle,EFLNORM,);
		//MapKey(&Throttle,EFLOVER,);
		
		//Right
		//MapKey(&Throttle,EFRNORM,);
		//MapKey(&Throttle,EFROVER,);
	
	//Engine Oper
		//Left
		MapKey(&Throttle,EOLIGN,PULSE + Engine_Left_Start);
		//MapKey(&Throttle,EOLNORM,);
		//MapKey(&Throttle,EOLMOTOR,);
		
		//Right
		MapKey(&Throttle,EORIGN,PULSE + Engine_Right_Start);
		//MapKey(&Throttle,EORNORM,);
		//MapKey(&Throttle,EORMOTOR,);
				
	//APU
		MapKey(&Throttle,APUON,PULSE + Electric_Power_Switch);
		MapKey(&Throttle,APUOFF,PULSE + Electric_Power_Switch);
	
	//Flaps
		MapKey(&Throttle,FLAPU,PULSE + Flaps_Up);
		//MapKey(&Throttle,FLAPM,);
		MapKey(&Throttle,FLAPD,PULSE + Flaps_Landing_Position);
	
	//Idle Cutoff
		//Left
		MapKey(&Throttle,IDLELON,PULSE + Engine_Left_Stop);
		//MapKey(&Throttle,IDLELOFF,);
		
		//Right
		MapKey(&Throttle,IDLERON,PULSE + Engine_Right_Stop);
		//MapKey(&Throttle,IDLEROFF,);
	
	// Throttle Friction Control
	
	
	//Landing Gear Horn Silence
		MapKey(&Throttle,LDGH,TEMPO(Audible_Warning_Reset,Landing_Gear_Up_Down));

	//EAC
		//MapKey(&Throttle,EACON,);
		//MapKey(&Throttle,EACOFF,);
	//RDR Altm
		//MapKey(&Throttle,RDRNRM,);
		//MapKey(&Throttle,RDRDIS,);
	//AP Engage/Disengage
		//MapKey(&Throttle,APENG,);

	//AP Select Switch
		//MapKey(&Throttle,APPAT,);
		//MapKey(&Throttle,APAH,);
		//MapKey(&Throttle,APALT,);


}


int EventHandle(int type, alias o, int x)
{
    DefaultMapping(&o, x);
	
	//add event handling code here
}