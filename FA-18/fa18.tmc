include "target.tmh"
include "util.ttm"
include "keyboard.ttm"
include "dxmap.ttm"

int main()
{
	Configure(&HCougar, MODE_EXCLUDED);
	Configure(&T16000, MODE_EXCLUDED);
	Configure(&T16000L, MODE_EXCLUDED);
	Configure(&LMFD, MODE_EXCLUDED);
	Configure(&RMFD, MODE_EXCLUDED);
	Configure(&TFRPRudder, MODE_EXCLUDED);
	Configure(&TWCSThrottle, MODE_EXCLUDED);
	SetKBRate(50, 75);
    if(Init(&EventHandle)) return 1; // declare the event handler, return on error

	//Initialize Backlights
    	//ActKey(PULSE+KEYON+LED(&Throttle, LED_INTENSITY, ThrottleBL_OFF));

	//AXIS Assignment
	MapAxis(&Joystick, JOYX, DX_X_AXIS); 
	MapAxis(&Joystick, JOYY, DX_Y_AXIS);
	MapAxis(&Throttle, THR_LEFT, DX_ZROT_AXIS);
	MapAxis(&Throttle, THR_RIGHT, DX_Z_AXIS); 
	MapAxis(&Throttle, THR_FC, DX_SLIDER_AXIS);
	MapAxis(&Throttle, SCY, DX_YROT_AXIS, AXIS_REVERSED, MAP_ABSOLUTE); 
	SetSCurve(&Throttle, SCY, 0, 20, 0, 10, -4); 
	MapAxis(&Throttle, SCX, DX_XROT_AXIS, AXIS_NORMAL, MAP_ABSOLUTE); 
	SetSCurve(&Throttle, SCX, 0, 20, 0, 10, -4);

//Layers&Modes
	SetShiftButton(&Joystick,S3,&Throttle,BSF,BSB);
	
//STICK

	//S2 Weapon Release
		MapKey(&Joystick, S2,Weapon_Release_ButtonDX);

	//S1 Master Mode Control Button
		MapKey(&Joystick, S1,0);
	//Trim
		MapKey(&Joystick,H1D,Trimmer_Switch__PULL_CLIMB_);
		MapKey(&Joystick,H1U,Trimmer_Switch__PUSH_DESCEND_);
		MapKey(&Joystick,H1L,Trimmer_Switch__LEFT_WING_DOWN);
		MapKey(&Joystick,H1R,Trimmer_Switch__RIGHT_WING_DOWN);


	//TMS
		MapKey(&Joystick,H2D,Sensor_Control_Switch__AftDX);
		MapKey(&Joystick,H2U,Sensor_Control_Switch__FwdDX);
		MapKey(&Joystick,H2L,Sensor_Control_Switch__LeftDX);
		MapKey(&Joystick,H2R,Sensor_Control_Switch__RightDX);

	//Trigger 
		//TG1
			MapKey(&Joystick,TG1,0);
		//TG2
			MapKey(&Joystick,TG2,Gun_Trigger__SECOND_DETENTDX);
	
	//DMS
		MapKey(&Joystick,H3D,VRZoomDX);
		MapKey(&Joystick,H3U,PULSE + RECCE_Event_Mark_Switch);
		//MapKey(&Joystick,H3L,);
		//MapKey(&Joystick,H3R,);

	//CMS
		MapKey(&Joystick,H4D,PULSE + Select_Gun);
		MapKey(&Joystick,H4U,PULSE + Select_Sparrow);
		MapKey(&Joystick,H4L,0);
		MapKey(&Joystick,H4R,PULSE + Select_AMRAAM);
		MapKey(&Joystick,H4P,PULSE + Select_Sidewinder); 
	
	//S3 Pinky Switch
		MapKey(&Joystick, S3,Undesignate_Nose_Wheel_Steer_SwitchDX);
	
	//S4 Paddle Switch
		MapKey(&Joystick, S4,Autopilot_NWS_Disengage_Paddle_SwitchDX);

//THROTTLE

	//Pinky
		//MapKey(&Throttle,PSF,);
		//MapKey(&Throttle,PSM,);
		//MapKey(&Throttle,PSB,);
		
	//Left Throttle Button
		MapKey(&Throttle,LTB,PULSE + ATC_Engage_Disengage_Switch);
	
	//Slew
		MapKey(&Throttle,SC,Throttle_Designator_Controller__DepressDX);
		KeyAxis(&Throttle, SCX, 0, AXMAP2(5, Throttle_Designator_Controller__LeftDX, 0,0,0, Throttle_Designator_Controller__RightDX));
		KeyAxis(&Throttle, SCY, 0, AXMAP2(5, Throttle_Designator_Controller__UpDX, 0,0,0, Throttle_Designator_Controller__DownDX));		

	//Coolie
		//MapKey(&Throttle,CSD,);
		//MapKey(&Throttle,CSU,);
		MapKey(&Throttle,CSL,PULSE + Cage_Uncage_Button);
		MapKey(&Throttle,CSR,PULSE + RAID_FLIR_FOV_Select_Button);
	
	//Mic Switch
		MapKey(&Throttle, MSD,FingerLiftsDX);
		MapKey(&Throttle, MSU,TsPTT); // TeamSpeak
		MapKey(&Throttle, MSL,SRSRadio2);
		MapKey(&Throttle, MSR,SRSRadio1);
		//MapKey(&Throttle, MSP,);	

	//Speed Brake
		MapKey(&Throttle,SPDF,Speed_Brake_Switch__RETRACT_OffDX); //may need to change this
		MapKey(&Throttle,SPDB,Speed_Brake_Switch__EXTEND_OffDX);
	
	//Boat
		//MapKey(&Throttle,BSF,);
		//MapKey(&Throttle,BSM,);
		//MapKey(&Throttle,BSB,);
	
	//China Hat
		MapKey(&Throttle,CHF,PULSE + Dispense_Switch__Forward_CHAFF_Center_OFF_);
		MapKey(&Throttle,CHB,PULSE + Dispense_Switch__Aft_FLARE_Center_OFF_);
	
	
//Throttle Panel

	//Engine Fuel Flow
		//Left
		//MapKey(&Throttle,EFLNORM,);
		//MapKey(&Throttle,EFLOVER,);
		
		//Right
		//MapKey(&Throttle,EFRNORM,);
		//MapKey(&Throttle,EFROVER,);
	
	//Engine Oper
		//Left
		//MapKey(&Throttle,EOLIGN,);
		//MapKey(&Throttle,EOLNORM,);
		//MapKey(&Throttle,EOLMOTOR,);
		
		//Right
		//MapKey(&Throttle,EORIGN,);
		//MapKey(&Throttle,EORNORM,);
		//MapKey(&Throttle,EORMOTOR,);
				
	//APU
		//MapKey(&Throttle,APUON,);
		//MapKey(&Throttle,APUOFF,);
	
	//Flaps
		MapKey(&Throttle,FLAPU,PULSE + FLAP_Switch__AUTO);
		MapKey(&Throttle,FLAPM,PULSE + FLAP_Switch__HALF);
		MapKey(&Throttle,FLAPD,PULSE + FLAP_Switch__FULL);
	
	//Idle Cutoff
		//Left
		MapKey(&Throttle,IDLELON,PULSE + Throttle_Left__OFF);
		MapKey(&Throttle,IDLELOFF,PULSE + Throttle_Left__IDLE);
		
		//Right
		MapKey(&Throttle,IDLERON,PULSE + Throttle_Right__OFF);
		MapKey(&Throttle,IDLEROFF,PULSE + Throttle_Right__IDLE);
	
	// Throttle Friction Control
	
	
	//Landing Gear Horn Silence
		MapKey(&Throttle,LDGH,TEMPO(0,Landing_Gear_Control_Handle__UP_DOWN));

	//EAC
		//MapKey(&Throttle,EACON,);
		//MapKey(&Throttle,EACOFF,);
	//RDR Altm
		//MapKey(&Throttle,RDRNRM,);
		//MapKey(&Throttle,RDRDIS,);
	//AP Engage/Disengage
		//MapKey(&Throttle,APENG,);

	//AP Select Switch
		//MapKey(&Throttle,APPAT,);
		//MapKey(&Throttle,APAH,);
		//MapKey(&Throttle,APALT,);


}


int EventHandle(int type, alias o, int x)
{
    DefaultMapping(&o, x);
	
	//add event handling code here
}